<?php
// $Id$

/**
 * @file
 * SMS Panel Bulk hooks implementations and helper functions.
 */

/**
 * Implements hook_perm().
 */
function sms_panel_bulk() {
  return array(
    'send bulk sms messages',
    'delete bulk sms messages'
  );
}

/**
 * Implements hook_menu().
 */
function sms_panel_bulk_menu() {
  $items = array();

  $items['admin/smsframework/panel/compose/bulk'] = array(
    'title' => 'Bulk Compose',
    'Description' => 'Compose a new bulk SMS message.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('sms_panel_bulk_form_compose'),
    'access arguments' => array('send bulk sms message'),
    'file' => 'sms_panel_bulk.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 2,
  );

  return $items;
}

/**
 * Implements hook_theme().
 */
function sms_panel_bulk_theme() {
  return array(
    'sms_panel_bulk_form_compose' => array(
      'argument' => array('form' => NULL),
      'file' => 'sms_panel_bulk.inc',
    ),
  );
}

/**
 * Implements hook_views_api().
 */
function sms_panel_bulk_views_api() {
  return array(
    'api' => 2.0,
    'path' => drupal_get_path('module', 'sms_panel_bulk') . '/views',
  );
}

/**
 * API function to save a bulk sms send log.
 *
 * @param $bulk
 *   SMS object to be saved.
 */
function sms_bulk_save(&$bulk) {
  $bulk = (object) $bulk;

  // Check if the timestamp is set.
  if (!$bulk->timestamp) {
    $bulk->timestamp = time();
  }
  // Check whether the SMS gateway is set or not.
  if (!$bulk->gateway) {
    $gateway = sms_default_gateway();
    $bulk->gateway = $gateway['identifier'];
  }
  // Check if the sender is set.
  if (!$bulk->uid) {
    global $user;
    $bulk->uid = $user->uid;
  }
  // Check recipients format.
  if (is_array($bulk->recipients)) {
    $bulk->recipients = serialize($bulk->recipients);
  }

  drupal_write_record('sms_panel_bulk', $bulk);
}

